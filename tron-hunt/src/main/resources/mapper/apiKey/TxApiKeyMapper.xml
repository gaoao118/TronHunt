<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.tron.mapper.TxApiKeyMapper">

    <resultMap type="TxApiKey" id="TxApiKeyResult">
        <result property="id" column="id"/>
        <result property="apiKey" column="api_key"/>
        <result property="privateKey" column="private_key"/>
        <result property="status" column="status"/>
        <result property="usable" column="usable"/>
        <result property="createTime" column="create_time"/>
        <result property="remark" column="remark"/>
    </resultMap>

    <sql id="selectTxApiKeyVo">
        select id, api_key, private_key, status, usable, create_time, remark
        from tx_api_key
    </sql>

    <select id="selectTxApiKeyList" parameterType="TxApiKey" resultMap="TxApiKeyResult">
        <include refid="selectTxApiKeyVo"/>
        <where>
            <if test="apiKey != null  and apiKey != ''">and api_key = #{apiKey}</if>
            <if test="privateKey != null  and privateKey != ''">and private_key = #{privateKey}</if>
            <if test="status != null ">and status = #{status}</if>
            <if test="usable != null ">and usable = #{usable}</if>
            <if test="remark != null and remark != ''">and remark like concat('%', #{remark}, '%')</if>
        </where>
    </select>

    <select id="selectTxApiKeyById" parameterType="String" resultMap="TxApiKeyResult">
        <include refid="selectTxApiKeyVo"/>
        where id = #{id}
    </select>

    <select id="selectTxApiKeyUsable" resultType="com.ruoyi.tron.domain.TxApiKey">
        <include refid="selectTxApiKeyVo"/>
        where status = 1
    </select>

    <insert id="insertTxApiKey" parameterType="TxApiKey" useGeneratedKeys="true" keyProperty="id">
        insert into tx_api_key
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="apiKey != null and apiKey != ''">api_key,</if>
            <if test="privateKey != null and privateKey != ''">private_key,</if>
            <if test="status != null">status,</if>
            <if test="usable != null">usable,</if>
            <if test="createTime != null">create_time,</if>
            <if test="remark != null">remark,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="apiKey != null and apiKey != ''">#{apiKey},</if>
            <if test="privateKey != null and privateKey != ''">#{privateKey},</if>
            <if test="status != null">#{status},</if>
            <if test="usable != null">#{usable},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="remark != null">#{remark},</if>
        </trim>
    </insert>

    <update id="updateTxApiKey" parameterType="TxApiKey">
        update tx_api_key
        <trim prefix="SET" suffixOverrides=",">
            <if test="apiKey != null and apiKey != ''">api_key = #{apiKey},</if>
            <if test="privateKey != null and privateKey != ''">private_key = #{privateKey},</if>
            <if test="status != null">status = #{status},</if>
            <if test="usable != null">usable = #{usable},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteTxApiKeyById" parameterType="String">
        delete
        from tx_api_key
        where id = #{id}
    </delete>

    <delete id="deleteTxApiKeyByIds" parameterType="String">
        delete from tx_api_key where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>